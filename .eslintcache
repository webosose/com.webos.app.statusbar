[{"E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\index.js":"1","E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\reportWebVitals.js":"2","E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\App\\App.js":"3","E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\views\\MainPanel.js":"4","E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\views\\StatusBarItems.js":"5","E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\views\\Controls.js":"6"},{"size":775,"mtime":1661840385263,"results":"7","hashOfConfig":"8"},{"size":341,"mtime":1661840402044,"results":"9","hashOfConfig":"8"},{"size":1804,"mtime":1665033268414,"results":"10","hashOfConfig":"8"},{"size":841,"mtime":1665033271619,"results":"11","hashOfConfig":"8"},{"size":2189,"mtime":1665039905748,"results":"12","hashOfConfig":"8"},{"size":714,"mtime":1661836458545,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uktw7w",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\index.js",[],[],"E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\reportWebVitals.js",[],[],"E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\App\\App.js",[],[],"E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\views\\MainPanel.js",[],[],"E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\views\\StatusBarItems.js",["33"],["34","35","36"]," /* eslint-disable  react/jsx-no-bind */\r\nimport kind from \"@enact/core/kind\";\r\nimport ContextualPopupDecorator from \"@enact/sandstone/ContextualPopupDecorator\";\r\nimport Heading from \"@enact/sandstone/Heading\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport Button from \"@enact/sandstone/Button\";\r\nimport Icon from \"@enact/sandstone/Icon\";\r\nimport LS2Request from \"@enact/webos/LS2Request\";\r\n\r\nlet hideTimerId,\r\ndelayTohide = 5000;\r\nconst MenuIconButton = kind({\r\n  name: \"SettingsIcon\",\r\n  render: (props) => {\r\n    return (\r\n      <Button\r\n        size=\"large\"\r\n        backgroundOpacity=\"transparent\"\r\n        icon={props.icon}\r\n        onClick={props.onClick}\r\n      />\r\n    );\r\n  },\r\n});\r\n\r\nconst MenuPopupButton = ContextualPopupDecorator(MenuIconButton);\r\n\r\nconst StatusBarItems = (props) => {\r\n  const [popUp, setpopUp] = useState(false);\r\n\r\n  const launchSettings = () => {\r\n    const req = new LS2Request();\r\n    req.send({\r\n      service: \"luna://com.webos.applicationManager\",\r\n      method: \"launch\",\r\n      parameters: {\r\n        id: \"com.palm.app.settings\",\r\n      },\r\n      subscribe: true,\r\n      onSuccess: (res) => {\r\n        console.log(\"success result is ===> \", res);\r\n        setpopUp(false);\r\n      },\r\n      onFailure: (res) => {\r\n        console.log(\"failure result is ===> \", res);\r\n      },\r\n    });\r\n  };\r\n  const renderPopup = () => {\r\n    return (\r\n      <>\r\n        <Heading size=\"small\" onClick={launchSettings}>\r\n          Settings\r\n          <Icon>triangleright</Icon>\r\n        </Heading>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const clearHideTime = () => {\r\n    if (hideTimerId) {\r\n      clearTimeout(hideTimerId);\r\n    }\r\n  };\r\n\r\n  const setHideTime = () => {\r\n    clearHideTime();\r\n    hideTimerId = setTimeout(() => {\r\n      setpopUp(false);\r\n    }, delayTohide);\r\n  };\r\n  const handleClick = () => {\r\n    setpopUp(true);\r\n    setHideTime();\r\n  };\r\n  return (\r\n    <MenuPopupButton\r\n      // onClick={handleClick}\r\n      onClick={()=>{}}\r\n      icon={props.statusIcon}\r\n      open={popUp}\r\n      popupComponent={renderPopup}\r\n      size=\"small\"\r\n      direction=\"above center\"\r\n      noAutoDismiss={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StatusBarItems;\r\n","E:\\ApplicationTeam\\OSE\\com.webos.app.statusbar\\src\\views\\Controls.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":74,"column":9,"nodeType":"39","messageId":"40","endLine":74,"endColumn":20},{"ruleId":"41","severity":1,"message":"42","line":54,"column":31,"nodeType":"43","messageId":"44","endLine":54,"endColumn":55,"suppressions":"45"},{"ruleId":"41","severity":1,"message":"42","line":81,"column":7,"nodeType":"43","messageId":"44","endLine":81,"endColumn":23,"suppressions":"46"},{"ruleId":"41","severity":1,"message":"42","line":84,"column":7,"nodeType":"43","messageId":"44","endLine":84,"endColumn":35,"suppressions":"47"},"no-unused-vars","'handleClick' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc",["48"],["49"],["50"],{"kind":"51","justification":"52"},{"kind":"51","justification":"52"},{"kind":"51","justification":"52"},"directive",""]